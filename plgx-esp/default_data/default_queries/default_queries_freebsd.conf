{
  "schedule": {
    "process_events":{
      "query": "SELECT auid, cmdline, ctime, cwd, egid, euid, gid, parent, path, pid, time, uid FROM process_events WHERE path NOT IN ('/bin/sed', '/usr/bin/tr', '/bin/gawk', '/bin/date', '/bin/mktemp', '/usr/bin/dirname', '/usr/bin/head', '/usr/bin/jq', '/bin/cut', '/bin/uname', '/bin/basename') and cmdline NOT LIKE '%_key%' AND cmdline NOT LIKE '%secret%';",
      "interval": 10
    },
    "cpu_time": {
      "query": "SELECT * FROM cpu_time;",
      "interval": 3600,
      "description": "Displays information from /proc/stat file about the time the CPU cores spent in different parts of the system"
    },
    "crontab": {
      "query": "SELECT * FROM crontab;",
      "interval" : 3600,
      "description": "Retrieves all the jobs scheduled in crontab in the target system."
    },
    "dns_resolvers": {
      "query": "SELECT * FROM dns_resolvers;",
      "interval": 3600,
      "description": "DNS resolvers used by the host"
    },
    "processes_snapshot": {
      "query": "select name, path, cmdline, cwd, on_disk from processes;",
      "interval" : 86400,
      "description": "A snapshot of all processes running on the host. Useful for outlier analysis.",
      "snapshot" : true
    },
    "etc_hosts_snapshot": {
      "query": "SELECT * FROM etc_hosts;",
      "interval" : 86400,
      "description": "Retrieves all the entries in the target system /etc/hosts file.",
      "snapshot" : true
    },
    "os_version": {
      "query": "SELECT * FROM os_version;",
      "interval" : 86400,
      "description": "Retrieves information from the Operating System where osquery is currently running.",
      "snapshot" : true
    },
    "osquery_cpu_pct": {
      "query": "SELECT ((osqueryd_time*100)/(SUM(system_time) + SUM(user_time))) AS pct FROM processes, (SELECT (SUM(processes.system_time)+SUM(processes.user_time)) AS osqueryd_time FROM processes WHERE name='osqueryd');",
      "interval" : 3600,
      "version": "2.0.0",
      "description": "The percentage of total CPU time (system+user) consumed by osqueryd",
      "snapshot" : true
    },
    "osquery_info": {
      "query": "SELECT * FROM osquery_info;",
      "interval": 86400,
      "description": "Information about the running osquery configuration",
      "snapshot": true
    },
    "per_query_perf": {
      "query": "SELECT name, interval, executions, output_size, wall_time, (user_time/executions) AS avg_user_time, (system_time/executions) AS avg_system_time, average_memory FROM osquery_schedule;",
      "interval" : 1800,
      "version": "2.0.0",
      "description": "Records the system resources used by each query"
    },
    "process_rates": {
      "query": "SELECT COUNT(1) AS num, count(1)/s AS rate FROM process_events, (SELECT (julianday('now') - 2440587.5)*86400.0 - start_time AS s FROM osquery_info LIMIT 1);",
      "interval" : 900,
      "version": "2.0.0",
      "description": "Records avg rate of process events since daemon started",
      "snapshot" : true
    },
    "processes_snapshot": {
      "query": "select name, path, cmdline, cwd, on_disk from processes;",
      "interval" : 86400,
      "description": "A snapshot of all processes running on the host. Useful for outlier analysis.",
      "snapshot" : true
    },
    "users": {
      "query": "SELECT * FROM users;",
      "interval" : 86400,
      "description": "Local system users."
    },
    "users_snapshot": {
      "query": "SELECT * FROM users;",
      "interval" : 86400,
      "description": "Local system users.",
      "snapshot": true
    },
    "osquery_extensions": {
      "query": "select type,  name, version from osquery_extensions;",
      "interval": 300,
      "snapshot": true,
      "description": "Snapshot query to find out the versions of osquery and extensions running in agent",
      "status":true
    }
  }
}
