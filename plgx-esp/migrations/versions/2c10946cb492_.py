"""empty message

Revision ID: 2c10946cb492
Revises: 59cebd30cc65
Create Date: 2022-05-09 16:18:11.564130

"""

# revision identifiers, used by Alembic.
revision = '2c10946cb492'
down_revision = '59cebd30cc65'

from alembic import op
import sqlalchemy as sa
import polylogyx.db.database
import flask_authorize

from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute('alter table handling_token rename to auth_token;')
    op.execute('alter index if exists handling_token_pkey rename to auth_token_pkey;')
    op.execute('alter sequence if exists handling_token_id_seq rename to auth_token_id_seq;')
    op.add_column('auth_token', sa.Column('user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'auth_token', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.execute('update auth_token set user_id=(select id from "user" where "user".username=auth_token.user);')
    op.drop_column('auth_token', 'user')

    op.add_column('platform_activity', sa.Column('entity', sa.String(), nullable=True))
    op.add_column('platform_activity', sa.Column('entity_id', sa.Integer(), nullable=True))

    op.execute("update platform_activity set entity='rule', entity_id=rule_id where rule_id is not null;")
    op.execute("update platform_activity set entity='query', entity_id=query_id where query_id is not null;")
    op.execute("update platform_activity set entity='pack', entity_id=pack_id where pack_id is not null;")
    op.execute("update platform_activity set entity='tag', entity_id=tag_id where tag_id is not null;")
    op.execute("update platform_activity set entity='config', entity_id=config_id where config_id is not null;")
    op.execute("update platform_activity set entity='default_query', entity_id=default_query_id where default_query_id is not null;")
    op.execute("update platform_activity set entity='default_filters', entity_id=default_filters_id where default_filters_id is not null;")
    op.execute("update platform_activity set entity='settings', entity_id=settings_id where settings_id is not null;")
    op.execute("update platform_activity set entity='node_config', entity_id=node_config_id where node_config_id is not null;")
    op.execute("update platform_activity set entity='threat_intel_credentials', entity_id=threat_intel_credentials_id where threat_intel_credentials_id is not null;")
    op.execute("update platform_activity set entity='virus_total_av_engines', entity_id=virus_total_av_engines_id where virus_total_av_engines_id is not null;")
    op.execute("update platform_activity set entity='ioc_intel', entity_id=ioc_intel_id where ioc_intel_id is not null;")
    op.execute("update platform_activity set entity='carve_session', entity_id=carve_session_id where carve_session_id is not null;")
    op.execute("update platform_activity set entity='alerts', entity_id=alert_id where alert_id is not null;")
    op.execute("update platform_activity set entity='node', entity_id=node_id where node_id is not null;")

    op.alter_column('platform_activity', 'created_at', existing_type=postgresql.TIMESTAMP(), nullable=False)
    op.drop_constraint('platform_activity_carve_session_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_ioc_intel_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_rule_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_tag_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_config_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_default_filters_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_virus_total_av_engines_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_alert_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_query_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_node_config_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_threat_intel_credentials_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_pack_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_node_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_default_query_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_constraint('platform_activity_settings_id_fkey', 'platform_activity', type_='foreignkey')
    op.drop_column('platform_activity', 'config_id')
    op.drop_column('platform_activity', 'virus_total_av_engines_id')
    op.drop_column('platform_activity', 'node_id')
    op.drop_column('platform_activity', 'carve_session_id')
    op.drop_column('platform_activity', 'settings_id')
    op.drop_column('platform_activity', 'rule_id')
    op.drop_column('platform_activity', 'threat_intel_credentials_id')
    op.drop_column('platform_activity', 'pack_id')
    op.drop_column('platform_activity', 'default_filters_id')
    op.drop_column('platform_activity', 'ioc_intel_id')
    op.drop_column('platform_activity', 'default_query_id')
    op.drop_column('platform_activity', 'query_id')
    op.drop_column('platform_activity', 'alert_id')
    op.drop_column('platform_activity', 'tag_id')
    op.drop_column('platform_activity', 'node_config_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('platform_activity', sa.Column('node_config_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('alert_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('query_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('default_query_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('ioc_intel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('default_filters_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('pack_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('threat_intel_credentials_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('rule_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('settings_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('carve_session_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('node_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('virus_total_av_engines_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('platform_activity', sa.Column('config_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('platform_activity_settings_id_fkey', 'platform_activity', 'settings', ['settings_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_default_query_id_fkey', 'platform_activity', 'default_query', ['default_query_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_node_id_fkey', 'platform_activity', 'node', ['node_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_pack_id_fkey', 'platform_activity', 'pack', ['pack_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_threat_intel_credentials_id_fkey', 'platform_activity', 'threat_intel_credentials', ['threat_intel_credentials_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_node_config_id_fkey', 'platform_activity', 'node_config', ['node_config_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_query_id_fkey', 'platform_activity', 'query', ['query_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_alert_id_fkey', 'platform_activity', 'alerts', ['alert_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_virus_total_av_engines_id_fkey', 'platform_activity', 'virus_total_av_engines', ['virus_total_av_engines_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_default_filters_id_fkey', 'platform_activity', 'default_filters', ['default_filters_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_config_id_fkey', 'platform_activity', 'config', ['config_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_tag_id_fkey', 'platform_activity', 'tag', ['tag_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_rule_id_fkey', 'platform_activity', 'rule', ['rule_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_ioc_intel_id_fkey', 'platform_activity', 'ioc_intel', ['ioc_intel_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('platform_activity_carve_session_id_fkey', 'platform_activity', 'carve_session', ['carve_session_id'], ['id'], ondelete='CASCADE')
    op.alter_column('platform_activity', 'created_at', existing_type=postgresql.TIMESTAMP(),  nullable=True)

    op.drop_column('platform_activity', 'entity_id')
    op.drop_column('platform_activity', 'entity')

    op.add_column('auth_token', sa.Column('user', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'auth_token', type_='foreignkey')
    op.drop_column('auth_token', 'user_id')
    op.execute('alter sequence if exists auth_token_id_seq rename to handling_token_id_seq;')
    op.execute('alter index if exists auth_token_pkey rename to handling_token_pkey;')
    op.execute('alter table auth_token rename to handling_token;')

    # ### end Alembic commands ###
