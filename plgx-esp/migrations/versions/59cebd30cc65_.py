"""empty message

Revision ID: 59cebd30cc65
Revises: ca6badea9091
Create Date: 2022-04-28 15:01:01.216067

"""

# revision identifiers, used by Alembic.
revision = '59cebd30cc65'
down_revision = 'ca6badea9091'

from alembic import op
import sqlalchemy as sa
import polylogyx.db.database
import flask_authorize

from sqlalchemy.dialects import postgresql


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column('alerts', 'recon_queries')
    op.drop_column('config', 'arch')
    op.drop_column('config', 'type')
    op.drop_column('default_filters', 'arch')
    op.drop_column('default_filters', 'platform')
    op.drop_column('default_filters', 'apply_by_default')
    op.drop_column('default_query', 'arch')
    op.drop_column('default_query', 'platform')
    op.drop_constraint('distributed_query_owner_id_fkey', 'distributed_query', type_='foreignkey')
    op.drop_constraint('distributed_query_alert_id_fkey', 'distributed_query', type_='foreignkey')
    op.create_foreign_key(None, 'distributed_query', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_column('distributed_query', 'timestamp')
    op.drop_column('distributed_query', 'alert_id')
    op.drop_column('distributed_query_task', 'timestamp')
    op.drop_column('distributed_query_task', 'sql')
    op.drop_index('idx_ioc_intel_type', table_name='ioc_intel')
    op.drop_column('rule', 'recon_queries')
    op.drop_column('user', 'social_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('user', sa.Column('social_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('rule', sa.Column('recon_queries', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index('idx_ioc_intel_type', 'ioc_intel', ['type'], unique=False)
    op.add_column('distributed_query_task', sa.Column('sql', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('distributed_query_task', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('distributed_query', sa.Column('alert_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('distributed_query', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'distributed_query', type_='foreignkey')
    op.create_foreign_key('distributed_query_alert_id_fkey', 'distributed_query', 'alerts', ['alert_id'], ['id'])
    op.create_foreign_key('distributed_query_owner_id_fkey', 'distributed_query', 'user', ['owner_id'], ['id'])
    op.add_column('default_query', sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('default_query', sa.Column('arch', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('default_filters', sa.Column('apply_by_default', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('default_filters', sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('default_filters', sa.Column('arch', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('config', sa.Column('type', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('config', sa.Column('arch', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('alerts', sa.Column('recon_queries', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
