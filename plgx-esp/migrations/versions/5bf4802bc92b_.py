"""empty message

Revision ID: 5bf4802bc92b
Revises: 5a2508fb7404
Create Date: 2021-09-15 10:54:35.517015

"""

# revision identifiers, used by Alembic.
revision = "5bf4802bc92b"
down_revision = "5a2508fb7404"

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute("drop index if exists idx_result_log_on_columns_time;")
    op.execute(
        "create index if not exists idx_result_log_on_columns_time_int on result_log (cast (columns ->> 'time' as integer));"
    )

    # Dropping Indexes which are not being used
    op.execute("drop index if exists index_node_recon_data_on_columns;")
    op.execute("drop index if exists index_node_recon_data_on_columns_path;")
    op.execute("drop index if exists idx_result_log_node_name_desc;")
    op.execute("drop index if exists index_result_log_on_columns;")
    op.execute("drop index if exists index_result_log_on_columns_path;")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_index("idx_result_log_on_columns_time_int", table_name="result_log")

    op.create_index(
        "index_result_log_on_columns_path", "result_log", ["columns"], unique=False
    )
    op.create_index(
        "index_result_log_on_columns", "result_log", ["columns"], unique=False
    )
    op.create_index(
        "idx_result_log_node_name_desc",
        "result_log",
        ["name", "node_id", "id"],
        unique=True,
    )
    op.create_index(
        "index_node_recon_data_on_columns_path",
        "node_recon_data",
        ["columns"],
        unique=False,
    )
    op.create_index(
        "index_node_recon_data_on_columns", "node_recon_data", ["columns"], unique=False
    )

    # ### end Alembic commands ###
